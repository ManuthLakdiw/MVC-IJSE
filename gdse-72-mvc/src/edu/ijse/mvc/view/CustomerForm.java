/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.ijse.mvc.view;

import edu.ijse.mvc.controller.CustomerController;
import edu.ijse.mvc.dto.CustomerDto;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author manuthlakdiv
 */
public class CustomerForm extends javax.swing.JFrame {
         private final CustomerController custController;

    /**
     * Creates new form customerForm
     */
    public CustomerForm() {
        custController = new CustomerController();
        initComponents();
        loadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSlider1 = new javax.swing.JSlider();
        customerForm = new javax.swing.JLabel();
        customerId = new javax.swing.JLabel();
        customerTitleTf = new javax.swing.JTextField();
        customerTitle = new javax.swing.JLabel();
        customerNameTf = new javax.swing.JTextField();
        customerName = new javax.swing.JLabel();
        customerIdTf = new javax.swing.JTextField();
        customerDOB = new javax.swing.JLabel();
        customerDOBTf = new javax.swing.JTextField();
        customerSalary = new javax.swing.JLabel();
        customerSalaryTf = new javax.swing.JTextField();
        customerAddress = new javax.swing.JLabel();
        customerAddressTf = new javax.swing.JTextField();
        customerCity = new javax.swing.JLabel();
        customerCityTf = new javax.swing.JTextField();
        customerProvince = new javax.swing.JLabel();
        customerProvinceTf = new javax.swing.JTextField();
        customerPostalCode = new javax.swing.JLabel();
        customerPcTf = new javax.swing.JTextField();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        save = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        customerTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        customerForm.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        customerForm.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        customerForm.setText("Customer Form");

        customerId.setFont(new java.awt.Font("Helvetica Neue", 1, 12)); // NOI18N
        customerId.setText("Customer ID");

        customerTitleTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerTitleTfActionPerformed(evt);
            }
        });

        customerTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 12)); // NOI18N
        customerTitle.setText("Customer Title");

        customerNameTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerNameTfActionPerformed(evt);
            }
        });

        customerName.setFont(new java.awt.Font("Helvetica Neue", 1, 12)); // NOI18N
        customerName.setText("customer Name");

        customerIdTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerIdTfActionPerformed(evt);
            }
        });

        customerDOB.setFont(new java.awt.Font("Helvetica Neue", 1, 12)); // NOI18N
        customerDOB.setText("Date of Birth");

        customerSalary.setFont(new java.awt.Font("Helvetica Neue", 1, 12)); // NOI18N
        customerSalary.setText("Salary");

        customerAddress.setFont(new java.awt.Font("Helvetica Neue", 1, 12)); // NOI18N
        customerAddress.setText("Address");

        customerAddressTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerAddressTfActionPerformed(evt);
            }
        });

        customerCity.setFont(new java.awt.Font("Helvetica Neue", 1, 12)); // NOI18N
        customerCity.setText("City");

        customerCityTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerCityTfActionPerformed(evt);
            }
        });

        customerProvince.setFont(new java.awt.Font("Helvetica Neue", 1, 12)); // NOI18N
        customerProvince.setText("Province");

        customerPostalCode.setFont(new java.awt.Font("Helvetica Neue", 1, 12)); // NOI18N
        customerPostalCode.setText("Postal Code");

        customerPcTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerPcTfActionPerformed(evt);
            }
        });

        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        customerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(customerTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(customerForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(customerTitle)
                                    .addComponent(customerId))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(customerTitleTf, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(customerName)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(customerNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(customerIdTf, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(customerDOB)
                                    .addComponent(customerSalary)
                                    .addComponent(customerAddress)
                                    .addComponent(customerCity)
                                    .addComponent(customerProvince)
                                    .addComponent(customerPostalCode))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(customerDOBTf, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(customerSalaryTf, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(customerProvinceTf, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(customerCityTf, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(customerPcTf, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(customerAddressTf, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 257, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(customerForm, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerId)
                    .addComponent(customerIdTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerTitle)
                    .addComponent(customerTitleTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerName)
                    .addComponent(customerNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerDOB)
                    .addComponent(customerDOBTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerSalary)
                    .addComponent(customerSalaryTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerAddress)
                    .addComponent(customerAddressTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerCity)
                    .addComponent(customerCityTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerProvince)
                    .addComponent(customerProvinceTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerPostalCode)
                    .addComponent(customerPcTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void customerTitleTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerTitleTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerTitleTfActionPerformed

    private void customerNameTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerNameTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerNameTfActionPerformed

    private void customerIdTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerIdTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerIdTfActionPerformed

    private void customerAddressTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerAddressTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerAddressTfActionPerformed

    private void customerCityTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerCityTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerCityTfActionPerformed

    private void customerPcTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerPcTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerPcTfActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add  code here:
        
        updateCustomer();
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        deleteCustomer();
    }//GEN-LAST:event_deleteActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        
        saveCustomer();
    }//GEN-LAST:event_saveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel customerAddress;
    private javax.swing.JTextField customerAddressTf;
    private javax.swing.JLabel customerCity;
    private javax.swing.JTextField customerCityTf;
    private javax.swing.JLabel customerDOB;
    private javax.swing.JTextField customerDOBTf;
    private javax.swing.JLabel customerForm;
    private javax.swing.JLabel customerId;
    private javax.swing.JTextField customerIdTf;
    private javax.swing.JLabel customerName;
    private javax.swing.JTextField customerNameTf;
    private javax.swing.JTextField customerPcTf;
    private javax.swing.JLabel customerPostalCode;
    private javax.swing.JLabel customerProvince;
    private javax.swing.JTextField customerProvinceTf;
    private javax.swing.JLabel customerSalary;
    private javax.swing.JTextField customerSalaryTf;
    private javax.swing.JTable customerTable;
    private javax.swing.JLabel customerTitle;
    private javax.swing.JTextField customerTitleTf;
    private javax.swing.JButton delete;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JButton save;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
   
    private void loadTable(){
        String [] columns = {"CustID","CustTitle","CustName","DOB","salary","CustAddress","City","Province","PostalCode"};
         DefaultTableModel tbm = new DefaultTableModel(columns, 0) {
            public boolean isCellEditable(int row, int column) { 
                return false; 
                
            }  
        };
         
         customerTable.setModel(tbm);
         
         try{
              ArrayList<CustomerDto> custDtoList= custController.getAllCustomer();
              
              for(CustomerDto custDto : custDtoList){
              
                Object [] rowData = {
                    custDto.getId(),
                    custDto.getTitle(),
                    custDto.getName(),
                    custDto.getDob(),
                    custDto.getSalary(),
                    custDto.getAddress(),
                    custDto.getCity(),
                    custDto.getProvince(),
                    custDto.getPostalCode()};
                
                
                tbm.addRow(rowData);
              }
                  
        }catch(Exception e){
         
            System.out.println("Exception");
         
         }
    
    } 
    
    
    private void saveCustomer(){
        CustomerDto cusDto = new CustomerDto(
                customerIdTf.getText(),
                customerTitleTf.getText(),
                customerNameTf.getText(),
                customerDOBTf.getText(),
                Double.parseDouble(customerSalaryTf.getText()),
                customerAddressTf.getText(),
                customerCityTf.getText(),
                customerProvinceTf.getText(),
                customerPcTf.getText());
        
        
        try{
            String resp = custController.save(cusDto);
            loadTable();
            clearForm();
        
        
        
        
        
        }catch(Exception e){
           JOptionPane.showMessageDialog(this, e.getMessage());
        
        
        }
            
            
    }
    
    private void updateCustomer(){
        CustomerDto cusDto = new CustomerDto(
                customerIdTf.getText(),
                customerTitleTf.getText(),
                customerNameTf.getText(),
                customerDOBTf.getText(),
                Double.parseDouble(customerSalaryTf.getText()),
                customerAddressTf.getText(),
                customerCityTf.getText(),
                customerProvinceTf.getText(),
                customerPcTf.getText());
        
        
        try{
            String resp = custController.update(cusDto);
            loadTable();
            clearForm();
        
        
        
        
        
        }catch(Exception e){
           JOptionPane.showMessageDialog(this, e.getMessage());
        
        
        }
            
    
    
    
    
    }
    
    
    private void deleteCustomer(){
         CustomerDto cusDto = new CustomerDto(customerIdTf.getText());

        
        
        try{
            String resp = custController.delete(cusDto);
            loadTable();
            clearForm();
        
        }catch(Exception e){
           JOptionPane.showMessageDialog(this, e.getMessage());
        
        
        }
    
    
    
    
    }
    private void clearForm(){
        customerIdTf.setText("");
        customerTitleTf.setText("");
        customerNameTf.setText("");
        customerDOBTf.setText("");
        customerSalaryTf.setText("");
        customerAddressTf.setText("");
        customerCityTf.setText("");
        customerProvinceTf.setText("");
        customerPcTf.setText("");
        
    }
     
    
    




}

